int initJoystick()
{
	MapAxis(&Joystick, JOYX, DX_X_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
	MapAxis(&Joystick, JOYY, DX_Y_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
	
	// Trim Hat
	MapKeyIO(&Joystick, H1U, 
		TEMPO(
		  ACT_PIP_ENGINE, 
		  EXEC("setPipConfig(SYS, ENG, ENG, ENG);"), 
		  DELAY_TEMPO
		),
		ACT_PITCH_DOWN
	);
	
	MapKeyIO(&Joystick, H1R, 
		TEMPO(
		  ACT_PIP_WEAPON, 
		  EXEC("setPipConfig(WEP, WEP);"), 
		  DELAY_TEMPO
		),
		ACT_YAW_RIGHT
	);
	
	MapKeyIO(&Joystick, H1D, 
		TEMPO(
		  ACT_PIP_RESET, 
		  EXEC("setPipConfig(WEP, SYS);"), 
		  DELAY_TEMPO
		),
		ACT_PITCH_UP
	);
	
	MapKeyIO(&Joystick, H1L, 
		TEMPO(
		  ACT_PIP_SYSTEM, 
		  EXEC("setPipConfig(ENG, SYS, SYS, SYS);"), 
		  DELAY_TEMPO
		),
		ACT_YAW_LEFT
	);

	// TMS 4-Way 

	MapKeyIO(&Joystick, H2U, 
		PULSE+ACT_LANDING_GEAR,
		PULSE+ACT_PANEL_COMMS
	);
	
	MapKeyIO(&Joystick, H2R, 
		PULSE+ACT_NEXT_FIRE_GROUP,
		PULSE+ACT_PANEL_INTERNAL
	);
	
	MapKeyIO(&Joystick, H2D, 
		PULSE+ACT_CARGO_SCOOP,
		PULSE+ACT_PANEL_ROLE
	);
	
	MapKeyIO(&Joystick, H2L, 
		PULSE+ACT_PREV_FIRE_GROUP,
		PULSE+ACT_PANEL_EXTERNAL
	);

	// DMS 4-Way
	MapKeyIO(&Joystick, H3U, 
		PULSE+ACT_LIGHTS,		
		TEMPO(
			PULSE+ACT_FSD, 
			PULSE+ACT_SUPERCRUISE, 
			DELAY_TEMPO
		)
	);
	
	MapKeyIO(&Joystick, H3R, 
		PULSE+ACT_NIGHT_VISION,
		TEMPO(
			PULSE+ACT_ENGINE_INCREASE, 
			PULSE+ACT_ENGINE_FULL, 
			DELAY_TEMPO
		)
	);

	MapKeyIO(&Joystick, H3D, 
		CHAIN(
		  EXEC("clearTriggerLock();"),
		  PULSE+ACT_HARDPOINTS
		),
		PULSE+ACT_ENGINE_BOOST
	);
	
	MapKeyIO(&Joystick, H3L, 
		PULSE+ACT_ORBIT_LINES,
		TEMPO(
			PULSE+ACT_ENGINE_DECREASE, 
			PULSE+ACT_ENGINE_STOP, 
			DELAY_TEMPO
		)
	);

	// CMS 4-Way w. push button
	MapKeyIO(&Joystick, H4U, 
		ACT_USE_SHEILD_CELL,
		ACT_UI_UP 
	);
	
	MapKeyIO(&Joystick, H4R, 
		PULSE+ACT_USE_ECM, 
		ACT_UI_RIGHT
	);
	
	MapKeyIO(&Joystick, H4D, 
		PULSE+ACT_USE_HEAT_SINK,
		ACT_UI_DOWN
	);
	
	MapKeyIO(&Joystick, H4L, 
		PULSE+ACT_USE_CHAFF,
		ACT_UI_LEFT
	);
	
	MapKeyIO(&Joystick, H4P, 
	 CHAIN(
			EXEC("clearTriggerLock();"),
			PULSE+ACT_HUD_MODE
   ),
	 PULSE+ACT_UI_SELECT
	);
	
	// Trigger 
	MapKey(&Joystick, TG1, EXEC("fireTriggerOne();"));
	MapKey(&Joystick, TG2, EXEC("fireTriggerTwo();"));
	
	MapKeyR(&Joystick, TG1, EXEC("releaseTriggerOne();"));
	MapKeyR(&Joystick, TG2, EXEC("releaseTriggerTwo();"));
	
	// Weapon Release
	
	MapKey(&Joystick, S2, ACT_SECONDARY_FIRE);
	
	// MMC Button 
	MapKey(&Joystick, S1, PULSE+ACT_UI_BACK);
	
	// NWS Button 
	MapKey(&Joystick, S3, PULSE+ACT_LIGHTS);
	
	// Pinkie Lever 
	MapKey(&Joystick, S4, 0); // DO NOT USE - Set as Shift IO
}