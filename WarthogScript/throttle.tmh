int initThrottle()
{
	MapAxis(&Throttle, THR_LEFT, DX_ZROT_AXIS);
	MapAxis(&Throttle, THR_RIGHT, DX_Z_AXIS);
	
	MapAxis(&Throttle, THR_FC, DX_SLIDER_AXIS);
	
	MapAxis(&Throttle, SCX, DX_XROT_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
	MapAxis(&Throttle, SCY, DX_YROT_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
	
	// Coolie Switch 	
	
	MapKeyIO(&Throttle, CSU, 
		PULSE+ACT_LIGHTS_TOGGLE,
		ACT_THRUST_UP
	);
	
	MapKeyIO(&Throttle, CSR, 
		PULSE+ACT_ORBIT_LINES,
		ACT_THRUST_RIGHT
	);
	
	MapKey(&Throttle, CSD, ACT_THRUST_DOWN);
	
	MapKey(&Throttle, CSL, 
		PULSE+ACT_NIGHT_VISION,
		ACT_THRUST_LEFT
	);
	
	// Mic Switch 
	
	MapKeyIOUMD(&Throttle, MSU, 
		PULSE+ACT_TARGET_PREV_HOSTILE, PULSE+ACT_TARGET_PREV_SHIP,
		PULSE+ACT_TARGET_PREV_HOSTILE, PULSE+ACT_TARGET_PREV_SHIP,
		PULSE+ACT_TARGET_PREV_SHIP,    PULSE+ACT_TARGET_PREV_HOSTILE
	);
	
	MapKeyIO(&Throttle, MSR,
		PULSE+ACT_TARGET_NEXT_MODULE,  PULSE+ACT_TARGET_AHEAD
	);
	
	MapKeyIOUMD(&Throttle, MSD,
		PULSE+ACT_TARGET_NEXT_HOSTILE, PULSE+ACT_TARGET_NEXT_SHIP,
		PULSE+ACT_TARGET_NEXT_HOSTILE, PULSE+ACT_TARGET_NEXT_SHIP,
		PULSE+ACT_TARGET_NEXT_SHIP,    PULSE+ACT_TARGET_NEXT_HOSTILE
	);
	
	MapKeyIO(&Throttle, MSL,
		PULSE+ACT_TARGET_PREV_MODULE,  PULSE+ACT_TARGET_HIGHEST_THREAT
	);
	
	MapKey(&Throttle, MSP,
		PULSE+ACT_NEXT_SYSTEM_IN_ROUTE
	);
	
	// Landing Gear Horn Silence Button 
	MapKey(&Throttle, LDGH, EXEC("resupply();"));
	
	// Left Throttle Button
	MapKey(&Throttle, LTB, PULSE+ACT_THROTTLE_REVERSE_TOGGLE);
	
	// Slew Control 
	MapKeyUMD(&Throttle, SC,
		ACT_HEADLOOK,
		ACT_HEADLOOK,
		ACT_SECONDARY_FIRE
	);
	
	// Speed brake 
	
	MapKey(&Throttle, SPDB, ACT_FLIGHT_ASSIST_OFF);
	MapKey(&Throttle, SPDF, ACT_FLIGHT_ASSIST_OFF);
	MapKey(&Throttle, SPDM, 0);
	
	// Boat Switch 
	MapKey(&Throttle, BSF, PULSE+ACT_GALAXY_MAP);
	MapKey(&Throttle, BSB, PULSE+ACT_SYSTEM_MAP);
	MapKey(&Throttle, BSM, PULSE+ACT_UI_BACK);
	
	// China Hat 
	MapKey(&Throttle, CHF, ACT_THRUST_FORWARD);
	MapKey(&Throttle, CHB, ACT_THRUST_BACKWARD);
	MapKey(&Throttle, CHM, 0);
	
	// Auto Pilot 
	MapKey(&Throttle, APENG, TEMPO(
		EXEC("stowAndSupercruise(0);"),
		EXEC("stowAndSupercruise(1);"),
		DELAY_TEMPO
	));
	
	MapKey(&Throttle, APAH, EXEC("clearTriggerLock();"));
	MapKey(&Throttle, APPAT, 0); // Used by fireTrigger functions
	MapKey(&Throttle, APALT, 0); // Used by fireTrigger functions
	
	// Pinky Switch 
	MapKey(&Throttle, PSF, 0); // DO NOT USE - Up Layer
	MapKey(&Throttle, PSB, 0); // DO NOT USE - Down Layer
	MapKey(&Throttle, PSM, EXEC("clearTriggerLock();"));
	
	// EAC 
	MapKey(&Throttle, EACON,  EXEC("mapSlider();")); 
	MapKey(&Throttle, EACOFF, EXEC("mapSlider();")); 
	
	// RDR
	MapKey(&Throttle, RDRNRM, 0); 
	MapKey(&Throttle, RDRDIS, 0); 
	
	// APU
	MapKey(&Throttle, APUON,  EXEC("setAutoscan();"));
	MapKey(&Throttle, APUOFF, EXEC("setAutoscan();"));
		
	// ENG OPER 
	MapKey(&Throttle, EOLMOTOR, 0);
	MapKey(&Throttle, EOLIGN, ACT_SRV_BOOST); 
	MapKey(&Throttle, EOLNORM, 0);
	MapKey(&Throttle, EORMOTOR, 0);
	MapKey(&Throttle, EORIGN, PULSE+ACT_SRV_TURRET);
	MapKey(&Throttle, EORNORM, 0);
	
	// FUEL
	MapKey(&Throttle, EFLNORM, ACT_ROTATIONAL_CORRECTION);
	MapKey(&Throttle, EFRNORM, ACT_SILENT_RUNNING);
	MapKey(&Throttle, EFLOVER, 0);
	MapKey(&Throttle, EFROVER, 0);
	
	// Flaps 
	MapKey(&Throttle, FLAPU, EXEC("setJoystickCurve(0);"));
	MapKey(&Throttle, FLAPM, EXEC("setJoystickCurve(1);"));
	MapKey(&Throttle, FLAPD, EXEC("setJoystickCurve(2);"));
}